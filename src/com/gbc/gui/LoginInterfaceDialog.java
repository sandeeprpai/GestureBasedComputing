/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewJFrame.java
 *
 * Created on Aug 27, 2011, 5:11:44 PM
 */
package com.gbc.gui;

import com.gbc.util.AppConstants;
import com.gbc.util.CaptureImage;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Administrator
 */
public class LoginInterfaceDialog extends javax.swing.JFrame implements ItemListener {

    PreviewFrame previewFrame = null;
    boolean isPreviewSelected = true;
    MainTray mainTray = null;
//    private static NewMainFrame newMainFrame;
//    Settings settings = null;// new Settings(AppConstants.settingsBean);
//    MDMainGUI main = null;

    /** Creates new form NewJFrame */
    public LoginInterfaceDialog(MainTray mainTray) {
        // super();
        this.mainTray = mainTray;
        try {
            UIManager.setLookAndFeel("com.jtattoo.plaf.mcwin.McWinLookAndFeel");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(LoginInterfaceDialog.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(LoginInterfaceDialog.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(LoginInterfaceDialog.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(LoginInterfaceDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
        SwingUtilities.updateComponentTreeUI(this);
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().createImage(getClass().getResource("/icon/colour_22.png")));
        optionComboBox.addItemListener(this);
        // this.previewFrame = new PreviewFrame(this, true);;
        setLayout(new BorderLayout());
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        alignCentre();
        resetBlocks();
//        // setFocusable(true);
//        Utilities.createDirectory();
//        // mainFrame = new MainFrame();
//        newMainFrame = new NewMainFrame();
//        main = mainFrame;
//
//        //mainFrame.setEnabled(false);
//        AppConstants.settingsBean = new SettingsBean();
//        loadSettings();
//        
//        settings = new Settings(AppConstants.settingsBean);



        //System.out.println(this.getBounds());
//        setLocationRelativeTo(null);
//        new Thread(new CaptureImage(this, newMainFrame)).start();
        //System.out.println(this.getX() +  " " + getY());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        miniPanel7 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        miniPanel6 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        miniPanel4 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        miniPanel5 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        miniPanel8 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        miniPanel9 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        miniPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        miniPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        miniPanel1 = new javax.swing.JPanel();
        optionComboBox = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GestLogin");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowDeiconified(java.awt.event.WindowEvent evt) {
                formWindowDeiconified(evt);
            }
            public void windowIconified(java.awt.event.WindowEvent evt) {
                formWindowIconified(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                formComponentMoved(evt);
            }
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });

        mainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel8.setPreferredSize(new java.awt.Dimension(250, 250));

        miniPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        miniPanel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miniPanel7MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                miniPanel7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                miniPanel7MouseExited(evt);
            }
        });

        javax.swing.GroupLayout miniPanel7Layout = new javax.swing.GroupLayout(miniPanel7);
        miniPanel7.setLayout(miniPanel7Layout);
        miniPanel7Layout.setHorizontalGroup(
            miniPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        miniPanel7Layout.setVerticalGroup(
            miniPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(miniPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(miniPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel6.setPreferredSize(new java.awt.Dimension(250, 250));

        miniPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        miniPanel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miniPanel6MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                miniPanel6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                miniPanel6MouseExited(evt);
            }
        });

        javax.swing.GroupLayout miniPanel6Layout = new javax.swing.GroupLayout(miniPanel6);
        miniPanel6.setLayout(miniPanel6Layout);
        miniPanel6Layout.setHorizontalGroup(
            miniPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        miniPanel6Layout.setVerticalGroup(
            miniPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(miniPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(miniPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel5.setPreferredSize(new java.awt.Dimension(250, 250));

        miniPanel4.setBackground(new java.awt.Color(240, 240, 240));
        miniPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        miniPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miniPanel4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                miniPanel4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                miniPanel4MouseExited(evt);
            }
        });

        javax.swing.GroupLayout miniPanel4Layout = new javax.swing.GroupLayout(miniPanel4);
        miniPanel4.setLayout(miniPanel4Layout);
        miniPanel4Layout.setHorizontalGroup(
            miniPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        miniPanel4Layout.setVerticalGroup(
            miniPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(miniPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(miniPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel4.setPreferredSize(new java.awt.Dimension(250, 250));

        miniPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        miniPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miniPanel5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                miniPanel5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                miniPanel5MouseExited(evt);
            }
        });

        javax.swing.GroupLayout miniPanel5Layout = new javax.swing.GroupLayout(miniPanel5);
        miniPanel5.setLayout(miniPanel5Layout);
        miniPanel5Layout.setHorizontalGroup(
            miniPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        miniPanel5Layout.setVerticalGroup(
            miniPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(miniPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(miniPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel9.setPreferredSize(new java.awt.Dimension(250, 250));

        miniPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        miniPanel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miniPanel8MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                miniPanel8MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                miniPanel8MouseExited(evt);
            }
        });

        javax.swing.GroupLayout miniPanel8Layout = new javax.swing.GroupLayout(miniPanel8);
        miniPanel8.setLayout(miniPanel8Layout);
        miniPanel8Layout.setHorizontalGroup(
            miniPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        miniPanel8Layout.setVerticalGroup(
            miniPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(miniPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGap(0, 214, Short.MAX_VALUE)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(miniPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel7.setPreferredSize(new java.awt.Dimension(250, 250));

        miniPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        miniPanel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miniPanel9MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                miniPanel9MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                miniPanel9MouseExited(evt);
            }
        });

        javax.swing.GroupLayout miniPanel9Layout = new javax.swing.GroupLayout(miniPanel9);
        miniPanel9.setLayout(miniPanel9Layout);
        miniPanel9Layout.setHorizontalGroup(
            miniPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        miniPanel9Layout.setVerticalGroup(
            miniPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addComponent(miniPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addComponent(miniPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setPreferredSize(new java.awt.Dimension(250, 250));

        miniPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        miniPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miniPanel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                miniPanel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                miniPanel2MouseExited(evt);
            }
        });

        javax.swing.GroupLayout miniPanel2Layout = new javax.swing.GroupLayout(miniPanel2);
        miniPanel2.setLayout(miniPanel2Layout);
        miniPanel2Layout.setHorizontalGroup(
            miniPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        miniPanel2Layout.setVerticalGroup(
            miniPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(miniPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(miniPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel3.setPreferredSize(new java.awt.Dimension(250, 250));

        miniPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        miniPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miniPanel3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                miniPanel3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                miniPanel3MouseExited(evt);
            }
        });

        javax.swing.GroupLayout miniPanel3Layout = new javax.swing.GroupLayout(miniPanel3);
        miniPanel3.setLayout(miniPanel3Layout);
        miniPanel3Layout.setHorizontalGroup(
            miniPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        miniPanel3Layout.setVerticalGroup(
            miniPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(miniPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(miniPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setPreferredSize(new java.awt.Dimension(250, 250));

        miniPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        miniPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miniPanel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                miniPanel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                miniPanel1MouseExited(evt);
            }
        });

        javax.swing.GroupLayout miniPanel1Layout = new javax.swing.GroupLayout(miniPanel1);
        miniPanel1.setLayout(miniPanel1Layout);
        miniPanel1Layout.setHorizontalGroup(
            miniPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        miniPanel1Layout.setVerticalGroup(
            miniPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(miniPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(miniPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        optionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Options", "Load", "Preview", "Color Settings", "Exit" }));
        optionComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                optionComboBoxItemStateChanged(evt);
            }
        });
        optionComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(optionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(677, Short.MAX_VALUE)
                .addComponent(optionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
// TODO add your handling code here:
    //System.out.println("Mouse Moved" + evt.getX() + "   " + evt.getY());
}//GEN-LAST:event_formMouseMoved

private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
// TODO add your handling code here:
}//GEN-LAST:event_formWindowStateChanged

private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
// TODO add your handling code here:
    // setLocationRelativeTo(null);
}//GEN-LAST:event_formComponentResized

private void formComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentMoved
// TODO add your handling code here:
    // setResizedState();
    // setLocationRelativeTo(null);
}//GEN-LAST:event_formComponentMoved

private void miniPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel1MouseEntered
// TODO add your handling code here:
    AppConstants.selectedPanel = 1;
}//GEN-LAST:event_miniPanel1MouseEntered

private void miniPanel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel2MouseEntered
// TODO add your handling code here:
    AppConstants.selectedPanel = 2;
}//GEN-LAST:event_miniPanel2MouseEntered

private void miniPanel3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel3MouseEntered
// TODO add your handling code here:
    AppConstants.selectedPanel = 3;
}//GEN-LAST:event_miniPanel3MouseEntered

private void miniPanel4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel4MouseEntered
// TODO add your handling code here:
    AppConstants.selectedPanel = 4;
}//GEN-LAST:event_miniPanel4MouseEntered

private void miniPanel5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel5MouseEntered
// TODO add your handling code here:
    AppConstants.selectedPanel = 5;
}//GEN-LAST:event_miniPanel5MouseEntered

private void miniPanel6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel6MouseEntered
// TODO add your handling code here:
    AppConstants.selectedPanel = 6;
}//GEN-LAST:event_miniPanel6MouseEntered

private void miniPanel7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel7MouseEntered
// TODO add your handling code here:
    AppConstants.selectedPanel = 7;
}//GEN-LAST:event_miniPanel7MouseEntered

private void miniPanel8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel8MouseEntered
// TODO add your handling code here:
    AppConstants.selectedPanel = 8;
}//GEN-LAST:event_miniPanel8MouseEntered

private void miniPanel9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel9MouseEntered
// TODO add your handling code here:
    AppConstants.selectedPanel = 9;
}//GEN-LAST:event_miniPanel9MouseEntered

private void miniPanel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel1MouseExited
// TODO add your handling code here:
    AppConstants.selectedPanel = 0;
}//GEN-LAST:event_miniPanel1MouseExited

private void miniPanel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel2MouseExited
// TODO add your handling code here:
    AppConstants.selectedPanel = 0;
}//GEN-LAST:event_miniPanel2MouseExited

private void miniPanel3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel3MouseExited
// TODO add your handling code here:
    AppConstants.selectedPanel = 0;
}//GEN-LAST:event_miniPanel3MouseExited

private void miniPanel4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel4MouseExited
// TODO add your handling code here:
    AppConstants.selectedPanel = 0;
}//GEN-LAST:event_miniPanel4MouseExited

private void miniPanel5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel5MouseExited
// TODO add your handling code here:
    AppConstants.selectedPanel = 0;
}//GEN-LAST:event_miniPanel5MouseExited

private void miniPanel6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel6MouseExited
// TODO add your handling code here:
    AppConstants.selectedPanel = 0;
}//GEN-LAST:event_miniPanel6MouseExited

private void miniPanel7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel7MouseExited
// TODO add your handling code here:
    AppConstants.selectedPanel = 0;
}//GEN-LAST:event_miniPanel7MouseExited

private void miniPanel8MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel8MouseExited
// TODO add your handling code here:
    AppConstants.selectedPanel = 0;
}//GEN-LAST:event_miniPanel8MouseExited

private void miniPanel9MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel9MouseExited
// TODO add your handling code here:
    AppConstants.selectedPanel = 0;
}//GEN-LAST:event_miniPanel9MouseExited

private void miniPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel1MouseClicked
// TODO add your handling code here:
    AppConstants.selectedPanel = 1;
    this.setSelectedBlock();
}//GEN-LAST:event_miniPanel1MouseClicked

private void miniPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel2MouseClicked
// TODO add your handling code here:
    AppConstants.selectedPanel = 2;
    this.setSelectedBlock();
}//GEN-LAST:event_miniPanel2MouseClicked

private void miniPanel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel3MouseClicked
// TODO add your handling code here:
    AppConstants.selectedPanel = 3;
    this.setSelectedBlock();
}//GEN-LAST:event_miniPanel3MouseClicked

private void miniPanel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel4MouseClicked
// TODO add your handling code here:
    AppConstants.selectedPanel = 4;
    this.setSelectedBlock();
}//GEN-LAST:event_miniPanel4MouseClicked

private void miniPanel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel5MouseClicked
// TODO add your handling code here:
    AppConstants.selectedPanel = 5;
    this.setSelectedBlock();
}//GEN-LAST:event_miniPanel5MouseClicked

private void miniPanel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel6MouseClicked
// TODO add your handling code here:
    AppConstants.selectedPanel = 6;
    this.setSelectedBlock();
}//GEN-LAST:event_miniPanel6MouseClicked

private void miniPanel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel7MouseClicked
// TODO add your handling code here:
    AppConstants.selectedPanel = 7;
    this.setSelectedBlock();
}//GEN-LAST:event_miniPanel7MouseClicked

private void miniPanel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel8MouseClicked
// TODO add your handling code here:
    AppConstants.selectedPanel = 8;
    this.setSelectedBlock();
}//GEN-LAST:event_miniPanel8MouseClicked

private void miniPanel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniPanel9MouseClicked
// TODO add your handling code here:
    AppConstants.selectedPanel = 9;
    this.setSelectedBlock();
}//GEN-LAST:event_miniPanel9MouseClicked

    private void optionComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_optionComboBoxItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_optionComboBoxItemStateChanged

    private void optionComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_optionComboBoxActionPerformed

    private void formWindowIconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowIconified
        // TODO add your handling code here:
        System.err.println("Iconified");
    }//GEN-LAST:event_formWindowIconified

    private void formWindowDeiconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeiconified
        // TODO add your handling code here:
        System.out.println("Deiconified");
    }//GEN-LAST:event_formWindowDeiconified
    /**
     * @param args the command line arguments
     */
    /* public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    /* try {
    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
    if ("Nimbus".equals(info.getName())) {
    javax.swing.UIManager.setLookAndFeel(info.getClassName());
    break;
    }
    }
    } catch (ClassNotFoundException ex) {
    java.util.logging.Logger.getLogger(LoginInterfaceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
    java.util.logging.Logger.getLogger(LoginInterfaceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
    java.util.logging.Logger.getLogger(LoginInterfaceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
    java.util.logging.Logger.getLogger(LoginInterfaceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>
    
    /* Create and display the form */
    /* java.awt.EventQueue.invokeLater(new Runnable() {
    
    public void run() {
    new LoginInterfaceDialog(123456).setVisible(true);
    }
    });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel miniPanel1;
    private javax.swing.JPanel miniPanel2;
    private javax.swing.JPanel miniPanel3;
    private javax.swing.JPanel miniPanel4;
    private javax.swing.JPanel miniPanel5;
    private javax.swing.JPanel miniPanel6;
    private javax.swing.JPanel miniPanel7;
    private javax.swing.JPanel miniPanel8;
    private javax.swing.JPanel miniPanel9;
    private javax.swing.JComboBox optionComboBox;
    // End of variables declaration//GEN-END:variables

    private void printBounds() {
        System.out.println(miniPanel1.getBounds());
        System.out.println(miniPanel2.getBounds());
//        System.out.println(miniPanel3.getBounds());  
//        System.out.println(miniPanel4.getBounds());  
//        System.out.println(miniPanel5.getBounds());  
//        System.out.println(miniPanel6.getBounds());  
//        System.out.println(miniPanel7.getBounds());  
//        System.out.println(miniPanel8.getBounds());  
//        System.out.println(miniPanel9.getBounds());  
    /*    System.out.println(miniPanel1.getLocation());  
        System.out.println(miniPanel2.getLocation());  
        System.out.println(miniPanel2.getSize());  
        System.out.println(miniPanel1.getBounds());  
        System.out.println(miniPanel1.getLocation());  
        System.out.println(miniPanel1.getSize());
        System.out.println(miniPanel1.getLocationOnScreen());
        System.out.println("-------------------");
        System.out.println(miniPanel2.getBounds());  
        System.out.println(miniPanel2.getLocation());  
        System.out.println(miniPanel2.getSize());
        System.out.println(miniPanel2.getLocationOnScreen());*/
    }

    public void setSelectedBlock() {
        System.out.println("inside setSelectedBlock");

        AppConstants.userTypedPattern = (AppConstants.userTypedPattern
                * 10) + AppConstants.selectedPanel;
        System.out.println("inside setSelectedBlock -if");
        switch (AppConstants.selectedPanel) {
            case 1:
                miniPanel1.setBackground(Color.black);

                break;
            case 2:
                miniPanel2.setBackground(Color.black);
                break;
            case 3:
                miniPanel3.setBackground(Color.black);
                break;
            case 4:
                miniPanel4.setBackground(Color.black);
                break;
            case 5:
                miniPanel5.setBackground(Color.black);
                break;
            case 6:
                miniPanel6.setBackground(Color.black);
                break;
            case 7:
                miniPanel7.setBackground(Color.black);
                break;
            case 8:
                miniPanel8.setBackground(Color.black);
                break;
            case 9:
                miniPanel9.setBackground(Color.black);
                break;
        }
        System.out.println("User Typed Pattern" + AppConstants.userTypedPattern);

        String userTypedString = "" + AppConstants.userTypedPattern;
        String passwordPatternString = "" + AppConstants.passwordPattern;

        int length = userTypedString.length();
        for (int i = 0; i < length - 1; i++) {
            if (userTypedString.charAt(i) == userTypedString.charAt(length - 1)) {
                userTypedString = userTypedString.substring(0, length - 1);
                length = userTypedString.length();
            }
        }
        System.out.println("corrected user typed Pattern = " + userTypedString);
        AppConstants.userTypedPattern = Long.parseLong(userTypedString);

        if (AppConstants.userTypedPattern == AppConstants.passwordPattern) {
          
                MsgDialog msgDialog = new MsgDialog(this, true);
                msgDialog.setMsg("Loging Successfull!!");
                msgDialog.setLocationRelativeTo(this);
                msgDialog.setVisible(true);
                
              
                //JOptionPane.showConfirmDialog(optionComboBox, "Matching");
                
           
            AppConstants.isTestDialogClosed = true;
            mainTray.setEnableComponents();

            this.dispose();
        } else if (userTypedString.length() >= passwordPatternString.length()) {
            JOptionPane.showMessageDialog(this, "Invalid pattern", "Error", JOptionPane.ERROR_MESSAGE);
            resetBlocks();
        }
    }

    public void resetBlocks() {
        Color c = new Color(240, 240, 240);
        miniPanel1.setBackground(c);

        miniPanel2.setBackground(c);

        miniPanel3.setBackground(c);

        miniPanel4.setBackground(c);

        miniPanel5.setBackground(c);

        miniPanel6.setBackground(c);

        miniPanel7.setBackground(c);

        miniPanel8.setBackground(c);

        miniPanel9.setBackground(c);
        System.out.println("Resetted.........................................");
        AppConstants.userTypedPattern = 0;

    }

    private void loadSettings() {
//        File settingsFile = new File(System.getProperty("user.dir")
//                + File.separator + "Settings" + File.separator + "Settings.ser");
//        if (settingsFile.exists()) {
//            FileInputStream fis = null;
//            try {
//                fis = new FileInputStream(settingsFile);
//                ObjectInputStream ois = new ObjectInputStream(fis);
//                SettingsBean tempBean = (SettingsBean) ois.readObject();
//                AppConstants.settingsBean = tempBean;
//                RGBBean red = AppConstants.settingsBean.getRedColor();
//                RGBBean green = AppConstants.settingsBean.getGreenColor();
//                RGBBean blue = AppConstants.settingsBean.getBlueColor();
//                AppConstants.RED_COMPONENT_OF_RED_MAX = red.getMaxRed();
//                AppConstants.GREEN_COMPONENT_OF_RED_MAX = red.getMaxGreen();
//                AppConstants.BLUE_COMPONENT_OF_RED_MAX = red.getMaxBlue();
//                AppConstants.RED_COMPONENT_OF_RED_MIN = red.getMinRed();
//                AppConstants.GREEN_COMPONENT_OF_RED_MIN = red.getMinGreen();
//                AppConstants.BLUE_COMPONENT_OF_RED_MIN = red.getMinBlue();
//                AppConstants.RED_COMPONENT_OF_GREEN_MAX = green.getMaxRed();
//                AppConstants.GREEN_COMPONENT_OF_GREEN_MAX = green.getMaxGreen();
//                AppConstants.BLUE_COMPONENT_OF_GREEN_MAX = green.getMaxBlue();
//                AppConstants.RED_COMPONENT_OF_GREEN_MIN = green.getMinRed();
//                AppConstants.GREEN_COMPONENT_OF_GREEN_MIN = green.getMinGreen();
//                AppConstants.BLUE_COMPONENT_OF_GREEN_MIN = green.getMinBlue();
//                AppConstants.RED_COMPONENT_OF_BLUE_MAX = blue.getMaxRed();
//                AppConstants.GREEN_COMPONENT_OF_BLUE_MAX = blue.getMaxGreen();
//                AppConstants.BLUE_COMPONENT_OF_BLUE_MAX = blue.getMaxBlue();
//                AppConstants.RED_COMPONENT_OF_BLUE_MIN = blue.getMinRed();
//                AppConstants.GREEN_COMPONENT_OF_BLUE_MIN = blue.getMinGreen();
//                AppConstants.BLUE_COMPONENT_OF_BLUE_MIN = blue.getMinBlue();
//            } catch (IOException ex) {
//                Logger.getLogger(LoginInterfaceDialog.class.getName()).log(Level.SEVERE, null, ex);
//            } catch (ClassNotFoundException ex) {
//                Logger.getLogger(LoginInterfaceDialog.class.getName()).log(Level.SEVERE, null, ex);
//            } finally {
//                try {
//                    fis.close();
//                } catch (IOException ex) {
//                    Logger.getLogger(LoginInterfaceDialog.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        } else {
//            RGBBean red = new RGBBean();
//            red.setMaxRed(AppConstants.RED_COMPONENT_OF_RED_MAX);
//            red.setMaxGreen(AppConstants.GREEN_COMPONENT_OF_RED_MAX);
//            red.setMaxBlue(AppConstants.BLUE_COMPONENT_OF_RED_MAX);
//            
//            red.setMinRed(AppConstants.RED_COMPONENT_OF_RED_MIN);
//            red.setMinGreen(AppConstants.GREEN_COMPONENT_OF_RED_MIN);
//            red.setMinBlue(AppConstants.BLUE_COMPONENT_OF_RED_MIN);
//            
//            RGBBean green = new RGBBean();
//            green.setMaxRed(AppConstants.RED_COMPONENT_OF_GREEN_MAX);
//            green.setMaxGreen(AppConstants.GREEN_COMPONENT_OF_GREEN_MAX);
//            green.setMaxBlue(AppConstants.BLUE_COMPONENT_OF_GREEN_MAX);
//            
//            green.setMinRed(AppConstants.RED_COMPONENT_OF_GREEN_MIN);
//            green.setMinGreen(AppConstants.GREEN_COMPONENT_OF_GREEN_MIN);
//            green.setMinBlue(AppConstants.BLUE_COMPONENT_OF_GREEN_MIN);
//            
//            
//            RGBBean blue = new RGBBean();
//            blue.setMaxRed(AppConstants.RED_COMPONENT_OF_BLUE_MAX);
//            blue.setMaxGreen(AppConstants.GREEN_COMPONENT_OF_BLUE_MAX);
//            blue.setMaxBlue(AppConstants.BLUE_COMPONENT_OF_BLUE_MAX);
//            
//            blue.setMinRed(AppConstants.RED_COMPONENT_OF_BLUE_MIN);
//            blue.setMinGreen(AppConstants.GREEN_COMPONENT_OF_BLUE_MIN);
//            blue.setMinBlue(AppConstants.BLUE_COMPONENT_OF_BLUE_MIN);
//            
//            AppConstants.settingsBean.setBlueColor(blue);
//            AppConstants.settingsBean.setGreenColor(green);
//            AppConstants.settingsBean.setRedColor(red);
//            Utilities.serializeSettingsBean();
//        }
//        
    }

    private void alignCentre() {
        Dimension dimScreen = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension dimPanel = new Dimension();
        dimPanel.height = mainPanel.getHeight();
        dimPanel.width = mainPanel.getWidth();
        int x = (int) dimScreen.getWidth() / 2 - dimPanel.width / 2;
        int y = (int) dimScreen.getHeight() / 2 - dimPanel.height / 2;
        mainPanel.setBounds(x,
                y, dimPanel.width, dimPanel.height);
        System.out.println("" + x + "   " + y);
        mainPanel.updateUI();
    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        String event = (String) e.getItem();
        if (event.equalsIgnoreCase("Exit")) {
            //optionComboBox.setSelectedIndex(0);
            if (e.getStateChange() == ItemEvent.SELECTED) {
                System.out.println("Inside exit");
                System.exit(0);
            }
        }
        if (event.equalsIgnoreCase("Preview")) {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                new Thread(new PreviewThread(this)).start();

                System.out.println("hi..........");
                optionComboBox.setSelectedIndex(0);
            }

        }
        if (event.equalsIgnoreCase("Load")) {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                new Thread(new ColorDetectedThread(this)).start();
                optionComboBox.setSelectedIndex(0);
            }

        }
        if (event.equalsIgnoreCase("Color Settings")) {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                new Thread(new ColorSettingsThread(this)).start();//  new ColorSettingsDialog(this)
                optionComboBox.setSelectedIndex(0);
            }

        }
        //Color Settings
        //optionComboBox.setSelectedItem("Options");
    }
}
