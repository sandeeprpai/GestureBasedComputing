package com.gbc.viewer;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainFrame.java
 *
 * Created on Jul 27, 2011, 8:38:38 PM
 */
import com.gbc.util.AppConstants;
import com.gbc.util.ImageFileFilter;
import com.gbc.viewer.ImageViewerController;
import com.iv.utils.ImageFielFilterClass;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;



import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author ThinkForce
 */
public class ImageViewerFrame extends javax.swing.JFrame {

    File[] files = null;
    int currentImagePosition = 0;
    int zoomFactor = 0;
    int currentImageHeight = 0;
    int currentImageWidth = 0;

    // ImageProcessing imageProcessing = null;

    /** Creates new form MainFrame */
    public ImageViewerFrame() {
        try {
            UIManager.setLookAndFeel("com.jtattoo.plaf.mcwin.McWinLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ImageViewerFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(ImageViewerFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(ImageViewerFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(ImageViewerFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        initComponents();
        setLocationRelativeTo(null);
         setIconImage(Toolkit.getDefaultToolkit().createImage(getClass().getResource("/icon/colour_22.png")));
        AppConstants.isImageViewerOn = true;
        AppConstants.isFingerTipOn = false;
        new Thread(new ImageViewerController(this)).start();
//        try {
//            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
//            SwingUtilities.updateComponentTreeUI(this);
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(ImageViewerFrame.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            Logger.getLogger(ImageViewerFrame.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            Logger.getLogger(ImageViewerFrame.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (UnsupportedLookAndFeelException ex) {
//            Logger.getLogger(ImageViewerFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }

        //setSize(Toolkit.getDefaultToolkit().getScreenSize());
        //setExtendedState(JFrame.MAXIMIZED_BOTH);
        // this.setSize(1024,1024);
        //files = new File(AppConstants.DEFAULT_FILE_PATH).listFiles(new ImageFileFilter());
        // imageProcessing = new ImageProcessing(this);
        System.out.println("Size" + imageLabel.getSize());
        System.out.println("Prffered" + imageLabel.getPreferredSize());
        File f1 = new File(System.getProperty("user.dir") + File.separator + "Test Images");
        if (f1.exists()) {
            indexAllFiles(f1);
        }
        AppConstants.imageLabelHt = imageLabel.getHeight();
        AppConstants.imageLabelWd = imageLabel.getWidth();
        showImage();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        backwardButton = new javax.swing.JButton();
        forwardButton = new javax.swing.JButton();
        zoomInButton = new javax.swing.JButton();
        zoomOutButton = new javax.swing.JButton();
        imagePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        imageLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        l3Panel3 = new javax.swing.JPanel();
        l3Label = new javax.swing.JLabel();
        l2Panel = new javax.swing.JPanel();
        l2Label = new javax.swing.JLabel();
        l1Panel = new javax.swing.JPanel();
        l1Label = new javax.swing.JLabel();
        r3Panel = new javax.swing.JPanel();
        r3Label = new javax.swing.JLabel();
        r2Panel = new javax.swing.JPanel();
        r2Label = new javax.swing.JLabel();
        r1Panel = new javax.swing.JPanel();
        r1Label = new javax.swing.JLabel();
        mainThumbPanel = new javax.swing.JPanel();
        mainLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("GestSlide");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });

        backwardButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/pre.png"))); // NOI18N
        backwardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backwardButtonActionPerformed(evt);
            }
        });

        forwardButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/next.png"))); // NOI18N
        forwardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwardButtonActionPerformed(evt);
            }
        });

        zoomInButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/plus.png"))); // NOI18N
        zoomInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoomInButtonActionPerformed(evt);
            }
        });

        zoomOutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/minus.png"))); // NOI18N
        zoomOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoomOutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(321, Short.MAX_VALUE)
                .addComponent(zoomOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(backwardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(forwardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(zoomInButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(370, 370, 370))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {backwardButton, forwardButton, zoomInButton, zoomOutButton});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backwardButton, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(forwardButton, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(zoomInButton, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(zoomOutButton, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {backwardButton, forwardButton, zoomInButton, zoomOutButton});

        imageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imageLabel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jScrollPane1.setViewportView(imageLabel);

        javax.swing.GroupLayout imagePanelLayout = new javax.swing.GroupLayout(imagePanel);
        imagePanel.setLayout(imagePanelLayout);
        imagePanelLayout.setHorizontalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 929, Short.MAX_VALUE)
        );
        imagePanelLayout.setVerticalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
        );

        l3Panel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        l3Panel3.setPreferredSize(new java.awt.Dimension(90, 90));

        l3Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l3LabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout l3Panel3Layout = new javax.swing.GroupLayout(l3Panel3);
        l3Panel3.setLayout(l3Panel3Layout);
        l3Panel3Layout.setHorizontalGroup(
            l3Panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(l3Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
        );
        l3Panel3Layout.setVerticalGroup(
            l3Panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(l3Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
        );

        l2Panel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        l2Panel.setPreferredSize(new java.awt.Dimension(90, 90));

        l2Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l2LabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout l2PanelLayout = new javax.swing.GroupLayout(l2Panel);
        l2Panel.setLayout(l2PanelLayout);
        l2PanelLayout.setHorizontalGroup(
            l2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(l2Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
        );
        l2PanelLayout.setVerticalGroup(
            l2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(l2Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
        );

        l1Panel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        l1Panel.setPreferredSize(new java.awt.Dimension(90, 90));

        l1Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l1LabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout l1PanelLayout = new javax.swing.GroupLayout(l1Panel);
        l1Panel.setLayout(l1PanelLayout);
        l1PanelLayout.setHorizontalGroup(
            l1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(l1Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
        );
        l1PanelLayout.setVerticalGroup(
            l1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(l1Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
        );

        r3Panel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        r3Panel.setPreferredSize(new java.awt.Dimension(90, 90));

        r3Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                r3LabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout r3PanelLayout = new javax.swing.GroupLayout(r3Panel);
        r3Panel.setLayout(r3PanelLayout);
        r3PanelLayout.setHorizontalGroup(
            r3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(r3Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
        );
        r3PanelLayout.setVerticalGroup(
            r3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(r3Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
        );

        r2Panel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        r2Panel.setPreferredSize(new java.awt.Dimension(90, 90));

        r2Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                r2LabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout r2PanelLayout = new javax.swing.GroupLayout(r2Panel);
        r2Panel.setLayout(r2PanelLayout);
        r2PanelLayout.setHorizontalGroup(
            r2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(r2Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
        );
        r2PanelLayout.setVerticalGroup(
            r2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(r2Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
        );

        r1Panel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        r1Panel.setPreferredSize(new java.awt.Dimension(90, 90));

        r1Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                r1LabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout r1PanelLayout = new javax.swing.GroupLayout(r1Panel);
        r1Panel.setLayout(r1PanelLayout);
        r1PanelLayout.setHorizontalGroup(
            r1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(r1Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
        );
        r1PanelLayout.setVerticalGroup(
            r1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(r1Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
        );

        mainThumbPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        javax.swing.GroupLayout mainThumbPanelLayout = new javax.swing.GroupLayout(mainThumbPanel);
        mainThumbPanel.setLayout(mainThumbPanelLayout);
        mainThumbPanelLayout.setHorizontalGroup(
            mainThumbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
        );
        mainThumbPanelLayout.setVerticalGroup(
            mainThumbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(l3Panel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l2Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l1Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainThumbPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r1Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r2Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r3Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainThumbPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(l1Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(r1Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(r2Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(r3Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(l2Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(l3Panel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jMenu1.setText("File");

        openMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openMenuItem.setText("Open...");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(openMenuItem);

        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItem2.setText("About us");
        jMenu2.add(jMenuItem2);

        jMenuItem3.setText("Contents");
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(imagePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        chooser.setFileFilter(new ImageFielFilterClass());
        int status = chooser.showOpenDialog(this);
        if (status == JFileChooser.APPROVE_OPTION) {
            indexAllFiles(chooser.getSelectedFile());
        }
    }//GEN-LAST:event_openMenuItemActionPerformed

    private void forwardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwardButtonActionPerformed
        // TODO add your handling code here:
        zoomFactor = 0;
        forwardImage();

    }//GEN-LAST:event_forwardButtonActionPerformed

    private void backwardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backwardButtonActionPerformed
        // TODO add your handling code here:
        zoomFactor = 0;
        backwardImage();

    }//GEN-LAST:event_backwardButtonActionPerformed

    private void zoomInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoomInButtonActionPerformed
        // TODO add your handling code here:
        zoomFactor = zoomFactor + 10;
        showImage(zoomFactor);
    }//GEN-LAST:event_zoomInButtonActionPerformed

    private void zoomOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoomOutButtonActionPerformed
        // TODO add your handling code here:
        zoomFactor = zoomFactor - 10;
        showImage(zoomFactor);
    }//GEN-LAST:event_zoomOutButtonActionPerformed

private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
// TODO add your handling code here:
}//GEN-LAST:event_formWindowStateChanged

private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
// TODO add your handling code here:
    System.out.println("resized");
    //imagePanel.setBounds(100, 300, 200, 400);
    imageLabel.setLayout(null);
}//GEN-LAST:event_formComponentResized

private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
// TODO add your handling code here:
    System.exit(0);
}//GEN-LAST:event_jMenuItem1ActionPerformed

    private void r1LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_r1LabelMouseClicked
        // TODO add your handling code here:
        currentImagePosition = currentImagePosition +1;
        currentImagePosition = (currentImagePosition % files.length);
        
        showImage();
    }//GEN-LAST:event_r1LabelMouseClicked

    private void r2LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_r2LabelMouseClicked
        // TODO add your handling code here:
         currentImagePosition = currentImagePosition +2;
        currentImagePosition = (currentImagePosition % files.length);
        
        showImage();
    }//GEN-LAST:event_r2LabelMouseClicked

    private void r3LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_r3LabelMouseClicked
        // TODO add your handling code here:
        currentImagePosition = currentImagePosition +3;
        currentImagePosition = (currentImagePosition % files.length);
        
        showImage();
    }//GEN-LAST:event_r3LabelMouseClicked

    private void l1LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l1LabelMouseClicked
        // TODO add your handling code here:
        currentImagePosition = currentImagePosition -1;
        currentImagePosition = ((currentImagePosition + files.length) % files.length);
        
        showImage();
    }//GEN-LAST:event_l1LabelMouseClicked

    private void l2LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l2LabelMouseClicked
        // TODO add your handling code here:
          currentImagePosition = currentImagePosition -2;
        currentImagePosition = ((currentImagePosition + files.length) % files.length);
        
        showImage();
    }//GEN-LAST:event_l2LabelMouseClicked

    private void l3LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l3LabelMouseClicked
        // TODO add your handling code here:
          currentImagePosition = currentImagePosition -1;
        currentImagePosition = ((currentImagePosition + files.length) % files.length);
        
        showImage();
    }//GEN-LAST:event_l3LabelMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        AppConstants.isImageViewerOn = false;
        AppConstants.isFingerTipOn = true;
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
               // new ImageViewerFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backwardButton;
    private javax.swing.JButton forwardButton;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JPanel imagePanel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel l1Label;
    private javax.swing.JPanel l1Panel;
    private javax.swing.JLabel l2Label;
    private javax.swing.JPanel l2Panel;
    private javax.swing.JLabel l3Label;
    private javax.swing.JPanel l3Panel3;
    private javax.swing.JLabel mainLabel;
    private javax.swing.JPanel mainThumbPanel;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JLabel r1Label;
    private javax.swing.JPanel r1Panel;
    private javax.swing.JLabel r2Label;
    private javax.swing.JPanel r2Panel;
    private javax.swing.JLabel r3Label;
    private javax.swing.JPanel r3Panel;
    private javax.swing.JButton zoomInButton;
    private javax.swing.JButton zoomOutButton;
    // End of variables declaration//GEN-END:variables

    private void showImage() {
        if (files.length > currentImagePosition) {
            ImageIcon imageIcon = new ImageIcon(files[currentImagePosition].getPath());
            currentImageHeight = imageIcon.getIconHeight();
            currentImageWidth = imageIcon.getIconWidth();
            Dimension labelDim = imageLabel.getSize();
            int newWidth = currentImageWidth;
            int newHeight = currentImageHeight;

            if (currentImageHeight > AppConstants.imageLabelHt) {
                newHeight = (int) AppConstants.imageLabelHt-20;
            }
            if (currentImageWidth > AppConstants.imageLabelWd) {
                newWidth = (int) AppConstants.imageLabelWd-20;
            }
            System.err.println("" + labelDim.getHeight() + "  " + labelDim.getWidth());
            Image newImage = imageIcon.getImage().getScaledInstance(newWidth,
                    newHeight, Image.SCALE_SMOOTH);

            ImageIcon newImageIcon = new ImageIcon(newImage);
            imageLabel.setIcon(newImageIcon);
            imageLabel.updateUI();
            loadThumbNailViews();
        }
    }

    private int calculateCurrentImagePosition(File selectedFile, File[] files) {
        int i = 0;
        for (File file : files) {
            if (file.getPath().equalsIgnoreCase(selectedFile.getPath())) {
                break;
            }
            i++;
        }
        return i;
    }

    public void showImage(int zoomFactor) {
        ImageIcon imageIcon = new ImageIcon(files[currentImagePosition].getPath());
        Image image = imageIcon.getImage();
        image = image.getScaledInstance(currentImageWidth + zoomFactor,
                currentImageHeight + zoomFactor, Image.SCALE_SMOOTH);
        imageIcon = new ImageIcon(image);
        imageLabel.setIcon(imageIcon);
        imageLabel.updateUI();
    }

    public void showException(Exception ex) {
        JOptionPane.showMessageDialog(this, ex.getMessage(), "Exception", JOptionPane.ERROR_MESSAGE);
    }

    public void forwardImage() {
        currentImagePosition++;
        if (currentImagePosition > files.length - 1) {
            currentImagePosition = 0;
        }
        showImage();
    }

    public void backwardImage() {
        currentImagePosition--;
        if (currentImagePosition < 0) {
            currentImagePosition = files.length - 1;
        }
        showImage();
    }

    private void indexAllFiles(File selectedFile) {

        if (selectedFile.isFile()) {
            files = new File(selectedFile.getParent()).listFiles(new ImageFileFilter()); // get all files in the directory
            for (File f : files) {
                System.out.println(f.getPath());
            }
            currentImagePosition = calculateCurrentImagePosition(selectedFile, files);
        } else if (selectedFile.isDirectory()) {
            files = selectedFile.listFiles(new ImageFileFilter());
            for (File f : files) {
                System.out.println(f.getPath());
            }
            currentImagePosition = 0;
        }
        // files = selectedFile.listFiles();

        showImage();
    }

    private void loadThumbNailViews() {
        try {
            int mainPanelImagePos = currentImagePosition % files.length;
            int r1PanelImagePos = (currentImagePosition +1) % files.length;
            int r2PanelImagePos = (currentImagePosition+2) % files.length;
            int r3PanelImagePos = (currentImagePosition+3) % files.length;
            int l1PanelImagePos = Math.abs((currentImagePosition-1) % files.length);
            int l2PanelImagePos = Math.abs((currentImagePosition-2) % files.length);
            int l3PanelImagePos = Math.abs((currentImagePosition -3)% files.length);
            BufferedImage myPictureBI = ImageIO.read(files[mainPanelImagePos]);        
           mainLabel.setIcon(new ImageIcon(myPictureBI.getScaledInstance(mainLabel.getWidth(), mainLabel.getHeight(), Image.SCALE_SMOOTH)));
           l1Label.setIcon(new ImageIcon(ImageIO.read(files[l1PanelImagePos]).getScaledInstance(l1Label.getWidth(), l1Label.getHeight(), Image.SCALE_SMOOTH)));
           l2Label.setIcon(new ImageIcon(ImageIO.read(files[l2PanelImagePos]).getScaledInstance(l2Label.getWidth(), l2Label.getHeight(), Image.SCALE_SMOOTH)));
           l3Label.setIcon(new ImageIcon(ImageIO.read(files[l3PanelImagePos]).getScaledInstance(l3Label.getWidth(), l3Label.getHeight(), Image.SCALE_SMOOTH)));
           r1Label.setIcon(new ImageIcon(ImageIO.read(files[r1PanelImagePos]).getScaledInstance(r1Label.getWidth(), r1Label.getHeight(), Image.SCALE_SMOOTH)));
           r2Label.setIcon(new ImageIcon(ImageIO.read(files[r2PanelImagePos]).getScaledInstance(r2Label.getWidth(), r2Label.getHeight(), Image.SCALE_SMOOTH)));
           r3Label.setIcon(new ImageIcon(ImageIO.read(files[r3PanelImagePos]).getScaledInstance(r3Label.getWidth(), r3Label.getHeight(), Image.SCALE_SMOOTH)));
        } catch (IOException ex) {
            Logger.getLogger(ImageViewerFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
